<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rmd.bms.dao.AreaDeliveryMapper">
  <resultMap id="BaseResultMap" type="com.rmd.bms.entity.AreaDelivery">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="delivery_id" jdbcType="INTEGER" property="deliveryId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createuser" jdbcType="INTEGER" property="createuser" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateuser" jdbcType="INTEGER" property="updateuser" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, area_id, delivery_id, status, createuser, createtime, updateuser, updatetime
  </sql>
  <select id="selectByExample" parameterType="com.rmd.bms.entity.AreaDeliveryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_area_delivery
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_area_delivery
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_area_delivery
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rmd.bms.entity.AreaDeliveryExample">
    delete from t_area_delivery
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rmd.bms.entity.AreaDelivery">
    insert into t_area_delivery (id, area_id, delivery_id, 
      status, createuser, createtime, 
      updateuser, updatetime)
    values (#{id,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, #{deliveryId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createuser,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updateuser,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rmd.bms.entity.AreaDelivery">
    insert into t_area_delivery
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="deliveryId != null">
        delivery_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createuser != null">
        createuser,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updateuser != null">
        updateuser,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="deliveryId != null">
        #{deliveryId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rmd.bms.entity.AreaDeliveryExample" resultType="java.lang.Long">
    select count(*) from t_area_delivery
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_area_delivery
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.deliveryId != null">
        delivery_id = #{record.deliveryId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createuser != null">
        createuser = #{record.createuser,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateuser != null">
        updateuser = #{record.updateuser,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_area_delivery
    set id = #{record.id,jdbcType=INTEGER},
      area_id = #{record.areaId,jdbcType=INTEGER},
      delivery_id = #{record.deliveryId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      createuser = #{record.createuser,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updateuser = #{record.updateuser,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rmd.bms.entity.AreaDelivery">
    update t_area_delivery
    <set>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="deliveryId != null">
        delivery_id = #{deliveryId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createuser != null">
        createuser = #{createuser,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        updateuser = #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rmd.bms.entity.AreaDelivery">
    update t_area_delivery
    set area_id = #{areaId,jdbcType=INTEGER},
      delivery_id = #{deliveryId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      createuser = #{createuser,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updateuser = #{updateuser,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="areaDeliveryInfo">
    a.id as areaId,a.area_code as areaCode,a.area_name as areaName,a.parent_code as parentCode,ad.status,concat(',',group_concat(dt.id),',') as deliveryId,group_concat(dt.type) as type
  </sql>
  <select id="selectInfoByParams" parameterType="com.rmd.bms.bean.AreaDeliveryInfo" resultType="com.rmd.bms.bean.AreaDeliveryInfo">
    <if test="deliveryId != null and deliveryId != ''">
    select * from (
    </if>
        select 
          <include refid="areaDeliveryInfo"></include>
        from t_sys_area a 
        LEFT JOIN t_area_delivery ad ON a.id=ad.area_id 
        LEFT JOIN t_delivery_type dt ON ad.delivery_id=dt.id 
        <where>  
          <if test="areaName != null and areaName != ''">  
            and a.area_name like concat(#{areaName},'%')
          </if>
          <if test="parentCode != null">
            and a.parent_code = #{parentCode}
          </if>
        </where>
        GROUP BY a.id
    <if test="deliveryId != null and deliveryId != ''">
    ) a where a.deliveryId like concat(concat('%,',#{deliveryId}),',%')
    </if>
  </select>
</mapper>