<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rmd.bms.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.rmd.bms.entity.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rolename" jdbcType="VARCHAR" property="rolename" />
    <result column="system_id" jdbcType="INTEGER" property="systemId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="createuser" jdbcType="INTEGER" property="createuser" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateuser" jdbcType="INTEGER" property="updateuser" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, rolename, status, system_id, note, createuser, createtime, updateuser, updatetime
  </sql>
  <select id="selectByExample" parameterType="com.rmd.bms.entity.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rmd.bms.entity.RoleExample">
    delete from t_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rmd.bms.entity.Role">
    insert into t_role (id, rolename, status, system_id, 
      note, createuser, createtime, 
      updateuser, updatetime)
    values (#{id,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},  #{systemId,jdbcType=INTEGER}, 
      #{note,jdbcType=VARCHAR}, #{createuser,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updateuser,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rmd.bms.entity.Role" useGeneratedKeys="true" keyProperty="id">
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rolename != null">
        rolename,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="systemId != null">
        system_id,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createuser != null">
        createuser,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updateuser != null">
        updateuser,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="systemId != null">
        #{systemId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rmd.bms.entity.RoleExample" resultType="java.lang.Long">
    select count(*) from t_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.rolename != null">
        rolename = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.systemId != null">
        system_id = #{record.systemId,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createuser != null">
        createuser = #{record.createuser,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateuser != null">
        updateuser = #{record.updateuser,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_role
    set id = #{record.id,jdbcType=INTEGER},
      rolename = #{record.rolename,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      system_id = #{record.systemId,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      createuser = #{record.createuser,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updateuser = #{record.updateuser,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rmd.bms.entity.Role">
    update t_role
    <set>
      <if test="rolename != null">
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="systemId != null">
        system_id = #{systemId,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createuser != null">
        createuser = #{createuser,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        updateuser = #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rmd.bms.entity.Role">
    update t_role
    set rolename = #{rolename,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      system_id = #{systemId,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      createuser = #{createuser,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updateuser = #{updateuser,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByAllList" parameterType="java.util.Map" resultMap="BaseResultMap">
 	SELECT 
		t1.id AS id,
		t1.rolename AS rolename,
		t1.status AS STATUS,
		t2.app_name AS appName,
		COUNT(t4.id) AS userCount
	FROM t_role t1
	LEFT JOIN t_web_application t2 ON t1.system_id = t2.id
	LEFT JOIN t_user_role t3 ON t3.role_id=t1.id
	LEFT JOIN t_user t4 ON t4.id=t3.user_id
	WHERE 1=1
	<if test="id != null">
		AND t1.id =#{id}
	</if>
	<if test="rolename != null">
		AND t1.rolename =#{rolename}
	</if>
	<if test="status != null">
		AND t1.status =#{status}
	</if>
	<if test="systemId != null">
        AND t1.system_id = #{systemId}
    </if>
    <if test="userid != null">
        AND t4.id = #{userid}
    </if>
    <if test="appNo != null">
        AND t2.app_no = #{appNo}
    </if>
	GROUP BY system_id,t1.id
  </select>
  
  <select id="selectByRolename" parameterType="com.rmd.bms.entity.Role" resultType="java.lang.Integer">
  SELECT COUNT(id) FROM t_role 
  WHERE 1=1 
  <if test="id != null">
       AND id != #{id,jdbcType=INTEGER}
  </if>
  <if test="rolename !=null">
 	   AND rolename = #{rolename,jdbcType=VARCHAR}
  </if>
  <if test="systemId !=null">
 	   AND system_id = #{systemId,jdbcType=VARCHAR}
  </if>
  </select>
  <!-- 根据按钮id查询角色 -->
  <select id="selectByoperationWhere" resultMap="BaseResultMap" parameterType="java.util.Map">
 	   SELECT 
		t1.id AS id
 	   FROM t_role t1 
 	   LEFT JOIN t_role_operation t2 ON t1.id=t2.role_id
 	   LEFT JOIN t_menu_operation t3 ON t3.id=t2.operation_id
 	   LEFT JOIN t_web_application t4 ON t4.`id`=t1.system_id
 	   WHERE 1=1 AND t1.status =1
 	    <if test="operationCode !=null">
 	     AND t3.operation_code = #{operationCode}
 	   </if>
 	    <if test="appNo !=null">
 	     AND t4.app_no = #{appNo}
 	   </if>
 	   GROUP BY t1.id
  </select>
</mapper>