<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rmd.bms.dao.DepartmentMapper">
  <resultMap id="BaseResultMap" type="com.rmd.bms.entity.Department">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="deptname" jdbcType="VARCHAR" property="deptname" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="createuser" jdbcType="INTEGER" property="createuser" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="updateuser" jdbcType="INTEGER" property="updateuser" />
     <result column="sort_num" jdbcType="INTEGER" property="sortNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, deptname, parent_id, status, note, createtime, createuser, updatetime, updateuser,sort_num
  </sql>
  <select id="selectByExample" parameterType="com.rmd.bms.entity.DepartmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_department
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rmd.bms.entity.DepartmentExample">
    delete from t_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByParentId" parameterType="java.lang.Integer">
  	delete from t_department
    where parent_id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rmd.bms.entity.Department">
    insert into t_department (id, deptname, parent_id, 
      status, note, createtime, 
      createuser, updatetime, updateuser,sort_num
      )
    values (#{id,jdbcType=INTEGER}, #{deptname,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{createuser,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, #{updateuser,jdbcType=INTEGER},
      #{sortNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rmd.bms.entity.Department">
    insert into t_department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deptname != null">
        deptname,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="createuser != null">
        createuser,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="updateuser != null">
        updateuser,
      </if>
      <if test="sortNum != null">
        sort_num
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deptname != null">
        #{deptname,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="sortNum != null">
        #{sortNum,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rmd.bms.entity.DepartmentExample" resultType="java.lang.Long">
    select count(*) from t_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_department
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deptname != null">
        deptname = #{record.deptname,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createuser != null">
        createuser = #{record.createuser,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateuser != null">
        updateuser = #{record.updateuser,jdbcType=INTEGER},
      </if>
      <if test="record.sortNum != null">
        sort_num = #{record.sortNum,jdbcType=INTEGER}
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_department
    set id = #{record.id,jdbcType=INTEGER},
      deptname = #{record.deptname,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      createuser = #{record.createuser,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      updateuser = #{record.updateuser,jdbcType=INTEGER},
      sort_num = #{record.sortNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rmd.bms.entity.Department">
    update t_department
    <set>
      <if test="deptname != null">
        deptname = #{deptname,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        createuser = #{createuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        updateuser = #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="sortNum != null">
        sort_num = #{sortNum,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rmd.bms.entity.Department">
    update t_department
    set deptname = #{deptname,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      createuser = #{createuser,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      updateuser = #{updateuser,jdbcType=INTEGER},
      updateuser = #{updateuser,jdbcType=INTEGER},
      sort_num = #{sortNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateSort" parameterType="com.rmd.bms.entity.Department">
  	update t_department
		<set>
			<if test="sortNum != null">
				sort_num = #{sortNum,jdbcType=INTEGER},
			</if>
			<if test="updatetime != null">
				updatetime = #{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateuser != null">
				updateuser = #{updateuser,jdbcType=INTEGER}
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 查询所有数据 -->
   <select id="selectByAllList" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT 
		  t1.id AS id,
		  t1.deptname AS deptname,  
		  t1.parent_id AS parentId,
		  t1.status AS STATUS,
		  t1.note AS note,
		  t1.createtime AS createtimne,
		  t1.createuser AS createuser,
		  t1.updatetime AS updatetime,
		  t1.updateuser AS updateuser,
		  t1.sort_num AS sortNum,
		  (SELECT COUNT(t2.id) FROM t_user t2 WHERE t2.deptid = t1.id AND t2.status =1) AS userNum
		FROM
		  t_department t1 
        <where>
            <if test="id != null">
                AND t1.id = #{id}
            </if>
            <if test="deptname != null and deptname != ''">
                AND t1.deptname like concat(#{deptname,jdbcType=VARCHAR},'%')
            </if>
            <if test="parentId !=null">
            	AND t1.parent_id = #{parentId}
            </if>
        </where>
		GROUP BY t1.id 
		ORDER BY sort_num DESC 
  </select>
  <!-- 验重 -->
  <select id="selectByDeptname" resultType="java.lang.Integer" parameterType="com.rmd.bms.entity.Department">
  	SELECT COUNT(deptname) FROM t_department 
  	WHERE 1=1
  	<if test="id != null">
		AND id != #{id,jdbcType=INTEGER}
	</if>
	<if test="parentId != null">
		AND parent_id = #{parentId}
	</if>
  	AND deptname = #{deptname,jdbcType=VARCHAR}
  </select>
  <!-- 递归查询部门名称 -->
  <select id="selectDepartNamesById" resultType="com.rmd.bms.entity.Department" parameterType="java.lang.Integer">
  	SELECT a.id,a.deptname FROM t_department a 
	WHERE id = (SELECT b.parent_id FROM t_department b WHERE b.id=#{id,jdbcType=INTEGER})
  </select>
  <!-- 多条件查询对象 -->
  <select id="selectByAll" resultType="com.rmd.bms.entity.Department" parameterType="com.rmd.bms.entity.Department">
	  SELECT 
	 	 id AS id,
	 	 deptname AS deptname
	  FROM t_department WHERE 1=1
	  <if test="parent_id !=null">
	  	AND parent_id = #{parent_id,jdbcType=INTEGER}
	  </if>
  </select>
</mapper>