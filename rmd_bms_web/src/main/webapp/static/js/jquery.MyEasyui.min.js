$(function(){
	$("#fromupLoad").bind("onsubmit",function qwer(){
		var isValid = $('#fromupLoad').form('validate');
		alert(isValid);
			if (!isValid){
				$.messager.progress('close');	// hide progress bar while the form is invalid
				return false;
			}
			return isValid;	// return false will stop the form submission
			
			//FromUpLoad();
	});
});
$.extend($.fn.validatebox.defaults.rules,{
	 minLength: {//验证长度至少11位
		 validator: function(value, param){
			 return value.length >= param[0];
		 },
		 message: 'Please enter at least {0} characters.'
	 },
	 
	  maxLength: {     
          validator: function(value, param){     
              return param[0] >= value.length;     
          },     
          message: '请输入最大{0}位字段.'    
      },
      
      //验证小数点四舍五入
      rounded:{
    	validator:function(value,param){
    		var reg = /^-?[1-9]+(\.\d+)?$|^-?0(\.\d+)?$|^-?[1-9]+[0-9]*(\.\d+)?$/;
    		 return reg.test(value);
    	}, 
      message:''
      },
      
      //验证小数点后两位
      decimalPoint:{
    	validator:function(value,param){
    		var reg = /^\d+(\.\d{1,2})?$/;
    		 return reg.test(value);
    	}, 
      message:'请输入整数或小数点后两位的数字'
      },
      
	 integer: {// 验证只能是数字
		 validator: function (value) {
			 //return /^[+]?[1-9]+\d*$/i.test(value);
			 // return /^([+]?[0-9])|([-]?[0-9])+\d*$/i.test(value);
			 return /^([0-9]+)$/i.test(value);
		 },
		 message: '请输入数字.'
	 },

	 mobile: {//验证手机号
		// alert("11111");
		 validator: function (value) {
			 var reg = /^1[3|4|5|8|9]\d{9}$/;
			 return reg.test(value);
		 },
		 message: '输入手机号码格式不准确.'
	},
	//对空格进行验证
	isBlank: {
        validator: function (value, param) {
        	value = $.trim(value); //去空格 
        	 return value.length >0;
             },
             message: '不能为空，全空格也不行'},
    //验证邮编
    zipcode: {  
        validator: function (value) {  
        	var reg = /^[0-9]\d{5}$/;  
            	return reg.test(value);  
            },  
              message: '邮编必须是6位数字.'  
        },
     //0-100的整数
       hundred:{
    	   validator: function (value) {
    		   var reg = /^(100|[1-9]\d|\d)$/;
    		   return reg.test(value);
    	   },
    	   message: '请输入0-100的整数.'
       },
       //字母数字和下划线
       enAndnum:{
    	 validator:function(value){
  		   	return checkAccountStr(value);
    	 },
    	 message:'请输入字母数字下划线'
       },   
       editInfoCheck:{
    	   /*
    	    * 编辑信息时，密码因为进行MD5加密后，不能直接进行校验
    	    * 
    	    */
    	   validator:function (value,param){
    		   if(value == param) return true;
    		   else return (checkAccountStr(value) && value.length>=6 && value.length<=16);
    	   },
    	   message:'请输入字母数字下划线'
       },
   /* CHS: {  
        validator: function (value) {  
            return /^[\u0391-\uFFE5]+$/.test(value);  
        },  
        message: '只能输入汉字'  
    }, */
	phone : {// 验证电话号码 
	        validator : function(value) { 
	            return /^((\d2,3)|(\d{3}\-))?(0\d2,3|0\d{2,3}-)?[1-9]\d{6,7}(\-\d{1,4})?$/i.test(value); 
	        }, 
	        message : '格式不正确,请使用下面格式:020-88888888' 
	    }, 					
		
		uniqueCheck: {
				/* 	param 参数集合: 参数均为数字，以","分隔。(可扩展)
				 * 	第一个数字代表 后台的url；1:规格型号编码  ；2 ：品牌名称；3:仓库名称验证;4：单位数量组名称;5:角色名称验证
				 * 	第二个数字代表为增加还是修改：0：修改；1：新增；
				 * 	第三个数字代表类型：0：无格式；1：数字；
				 *  第四个数字代表id。
				 */
				validator: function (value, param) {
								var parArr = [];
								parArr = param.toString().split(",");
								var urlstr = "";
								var datastr = $.trim(value);
								if(parArr[0] == 1)  		//规格型号的验证。如果还有其它，直接加数值。  
									urlstr = "/rmd/goodsSaleInfo/checkUniqueCode";
								else if(parArr[0] == 2)  	//品牌名称的验证。  
									urlstr = "/rmd//rmd/goods/getGood/checkUniqueName";
								//else if(parArr[0] == 3)  	//仓库名称的验证。  
									//urlstr = "/rmd/repository/checkRepositoryName";
								else if(parArr[0] == 4)  	//单位数量组名称的验证。  
									urlstr = "/rmd/sysUnitGroup/checkUnitGroupName";
								else if(parArr[0] == 5)  	//角色名称的验证。  
									urlstr = "/rmd/role/checkRoleName";
								else if(parArr[0] == 6)
									urlstr = "/rmd/goods/getGood";
								if(parArr[1] == 0)  //如果第二个参数为0，则为修改
									datastr += ","+parArr[3];
								
								if(parArr[2] == 1){
									if(!/^([0-9]+)$/i.test(value)){
										$.fn.validatebox.defaults.rules.uniqueCheck.message = '格式不正确,只能为数字！';
										return false;
									}
								}
								
								var result = $.ajax({
									url: urlstr,
									data: "datastr="+datastr,
									type: 'post',
									dataType: 'json',
									async: false,
									cache: false
								}).responseText;
								var resultStr = eval("("+result+")");
								if (resultStr == "0") {
									$.fn.validatebox.defaults.rules.uniqueCheck.message = '已存在！';
									return false;
								} else {
									return true;
								}
								return true;
							},
				message: '格式不正确'
		},	
		uniqueCheckColumn: {
			/* 	
			 *  说明：上面已有唯一性验证，但是不够通用。因为已经有代码使用上面的，所以，保留！！！！
			 *  param 参数集合: 参数均为数字，以","分隔。(可扩展)
			 * 	第一个数字代表 后台的表名和字段名；1:测试表  ；2 ：品牌名称；
			 * 	第二个数字代表为增加还是修改：0：修改；1：新增；
			 * 	第三个数字代表类型：0：无格式；1：数字；2:手机号；
			 *  第四个数字代表id。
			 *  第五个数字代表关联id。
			 */
			validator: function (value, param) {
							var parArr = [];
							parArr = param.toString().split(",");
							if(parArr[2] == 1){			//先对输入信息验证
								if(!/^([0-9]+)$/i.test(value)){
									$.fn.validatebox.defaults.rules.uniqueCheckColumn.message = '格式不正确,只能为数字！';
									return false;
								}
							}else if(parArr[2] == 2){
								if(!/^1[3|4|5|8|9]\d{9}$/i.test(value)){
									$.fn.validatebox.defaults.rules.uniqueCheckColumn.message = '手机号格式不正确！';
									return false;
								}
							}
							
							var urlstr = "/rmd/goodsbrand/checkUniqueColumn";
							var datastr = "";
							var tableName ="";
							var columnName ="";
							var status = "";
							var relateColumn = "";
							var columnValue = encodeURIComponent($.trim(value));
							
							if(parArr[0] == 1){			//测试表的表名。如果还有其它，直接加数值。 
								tableName = "testtable";
								columnName = "name";
							}else if(parArr[0] == 2){	//商品品牌表名。
								tableName = "t_goods_brand";
								columnName = "brandname";
								status = "0";
							}else if(parArr[0] == 3){     //商品类型组分组名称
								tableName = "t_goods_type_group";
								columnName = "groupname";
							}else if(parArr[0] == 4){		//可选值属性名称
								tableName = "t_goods_type_property_param";
								columnName = "propertyname";
								relateColumn = "goodstypepropertyid";
							}else if(parArr[0] == 5){     //用户组名称
								tableName = "t_group";
								columnName = "groupname";
							}else if(parArr[0] == 6){     //用户名称
								tableName = "t_user";
								columnName = "loginname";
								status = "2";
							}else if(parArr[0] == 7){     //供货商名称
								tableName = "t_supplier";
								columnName = "suppliersname";
							}else if(parArr[0] == 8){     //类型名称
								tableName = "t_goods_type";
								columnName = "typename";
								status = "2";
							}else if(parArr[0] == 9){     //类型编码唯一
								tableName = "t_goods_type";
								columnName = "code";
							}else if(parArr[0] == 10){     //折扣方案名称唯一
								tableName = "t_extend_discount";
								columnName = "disname";
							}else if(parArr[0] == 11){     //仓库名称唯一
								tableName = "t_repository";
								columnName = "name";
							}else if(parArr[0] == 12){    //会员手机号唯一
								tableName = "t_member";
								columnName = "mobile";
							}else if(parArr[0] == 13){    //物流名称唯一
								tableName = "t_deliver_company";
								columnName = "name";
							}else if(parArr[0] == 14){    //规格型号名称唯一
								tableName = "t_goods_saleinfo";
								columnName = "spec";
								relateColumn= "baseid";
							}else if(parArr[0]==15){     //商品名称唯一
								tableName="t_goods_base";
								columnName = "name";
							}else if(parArr[0]==16){     //规格型号编码唯一
								tableName = "t_goods_saleinfo";
								columnName = "code";
							}else if(parArr[0]==17){     //计量单位名称唯一
								tableName = "t_sys_unit";
								columnName = "unitname";
								relateColumn = "unitgroupid";
							}else if(parArr[0]==18){     //商品分类名称唯一
								tableName = "t_goods_category";
								columnName = "categoryname";
								//relateColumn = "unitgroupid";
							}
							datastr = "tableName="+tableName+"&columnName="+columnName+"&columnValue="+columnValue+"&status="+status;
							
							if(parArr[1] == 0)  		//如果第二个参数为0，则为修改
								datastr += "&id="+parArr[3];
							if(parArr[4] != "undefined" && parArr[4] != null ){ //联合唯一性校验中关联id
								datastr += "&relateColumn="+relateColumn+"&relateid="+parArr[4];
							}
							var result = $.ajax({
								url: urlstr,
								data: datastr,
								type: 'post',
								dataType: 'json',
								async: false,
								cache: false
							}).responseText;
							var resultStr = eval("("+result+")");
							if (resultStr == "1") {
								$.fn.validatebox.defaults.rules.uniqueCheckColumn.message = '已存在！';
								return false;
							} else {
								return true;
							}
							return true;
						},
			message: '格式不正确'
	},	
});
function checkAccountStr(value){
	var reg  = /^[A-Za-z0-9_-]+$/;
	var reg1 = /^[A-Za-z]+$/;
	var reg2 = /^[0-9]+$/;
	var reg3 = /^[_]+$/;
	var reg4 = /^[-]+$/;
	
	return reg.test(value) && !reg1.test(value) && !reg2.test(value) && !reg3.test(value) && !reg4.test(value);
}